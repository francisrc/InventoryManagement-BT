@model InventoryManagement_BT.Models.InventoryFormViewModel

@section scripts {

    <script src="@Url.Content("~/Scripts/take-inventory.js")"></script>

    <script type="text/javascript">
    </script>


}

<h2>Take Inventory</h2>
<div class="row">
    <div class="col-md-12">
        @using (Ajax.BeginForm("TakeInventory", "Inventory", new AjaxOptions { UpdateTargetId = "search-results", InsertionMode = InsertionMode.Replace }))
        {
            @Html.LabelFor(x => x.ItemKey)
            @Html.TextBoxFor(x => x.ItemKey)
            @Html.ValidationMessageFor(x => x.ItemKey)
            
            
            @Html.LabelFor(x => x.InventoryOwner)
            @Html.TextBoxFor(x => x.InventoryOwner)
            
            @Html.LabelFor(x => x.SelectedLocationId)
            @Html.DropDownListFor(x => x.SelectedLocationId, Model.LocationItems)
            
            @Html.LabelFor(x => x.SelectedClientSiteId)
            @Html.DropDownListFor(x => x.SelectedClientSiteId, Model.ClientSiteItems)
            
            
            @Html.HiddenFor(x => x.InventoriedBy)
            @Html.HiddenFor(x => x.InventoryDate)

            <input type="submit" name="" value="Add New Inventory Item" />

        }
    </div>
</div>

<div id="search-results"></div>

<p>Inventory Management Page</p>

<p>Scan each item at this location</p>
<p>A laser scanner can be used to perform the inventory but it
    must be configured to add a carriage return at the end of the
    scan
</p>

<div id="add-inventory-container"></div>


